"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const dutyChain_1 = require("./dutyChain");
const utils_1 = require("./utils");
class PageSplicing {
    constructor() {
        this.dutyChains = [];
        this.dutyChains = [];
    }
    get chain() {
        return this.dutyChains;
    }
    get head() {
        return this.dutyChains[0];
    }
    get tail() {
        return this.dutyChains.slice(-1)[0];
    }
    get utils() {
        return {
            pagingLogic: (getData, getCount) => {
                return async (offset, pageSize, next) => {
                    return await utils_1.pagingLogic(getData, getCount, offset, pageSize, next);
                };
            },
        };
    }
    emptyChain() {
        this.dutyChains = [];
    }
    next(handler) {
        const nextChain = new dutyChain_1.default(handler);
        if (this.head) {
            this.head.setNext(nextChain);
        }
        this.dutyChains.unshift(nextChain);
        return this;
    }
    async start(pageIndex, pageSize) {
        if (!this.tail)
            throw new Error('duty chain is empty!');
        const ret = await this.tail.handleRequest(pageIndex, pageSize);
        return ret;
    }
}
exports.default = PageSplicing;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwyQ0FBb0M7QUFDcEMsbUNBQXNDO0FBRXRDLE1BQU0sWUFBWTtJQUVoQjtRQURRLGVBQVUsR0FBZ0IsRUFBRSxDQUFDO1FBRW5DLElBQUksQ0FBQyxVQUFVLEdBQUcsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFDRCxJQUFXLEtBQUs7UUFDZCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7SUFDekIsQ0FBQztJQUVELElBQVksSUFBSTtRQUNkLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUM1QixDQUFDO0lBRUQsSUFBWSxJQUFJO1FBQ2QsT0FBTyxJQUFJLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFBO0lBQ3JDLENBQUM7SUFFRCxJQUFXLEtBQUs7UUFDZCxPQUFPO1lBQ0wsV0FBVyxFQUFFLENBQUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxFQUFFO2dCQUNqQyxPQUFPLEtBQUssRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRSxFQUFFO29CQUN0QyxPQUFPLE1BQU0sbUJBQVcsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUE7Z0JBQ3JFLENBQUMsQ0FBQTtZQUNILENBQUM7U0FDRixDQUFBO0lBQ0gsQ0FBQztJQUVNLFVBQVU7UUFDZixJQUFJLENBQUMsVUFBVSxHQUFHLEVBQUUsQ0FBQTtJQUN0QixDQUFDO0lBRU0sSUFBSSxDQUFDLE9BQWlCO1FBQzNCLE1BQU0sU0FBUyxHQUFHLElBQUksbUJBQVMsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUV6QyxJQUFJLElBQUksQ0FBQyxJQUFJLEVBQUU7WUFDYixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztTQUM5QjtRQUNELElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRW5DLE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQztJQUVNLEtBQUssQ0FBQyxLQUFLLENBQUMsU0FBUyxFQUFFLFFBQVE7UUFDcEMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJO1lBQUUsTUFBTSxJQUFJLEtBQUssQ0FBQyxzQkFBc0IsQ0FBQyxDQUFDO1FBQ3hELE1BQU0sR0FBRyxHQUFHLE1BQU0sSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsU0FBUyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBRS9ELE9BQU8sR0FBRyxDQUFBO0lBQ1osQ0FBQztDQUNGO0FBRUQsa0JBQWUsWUFBWSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IER1dHlDaGFpbiBmcm9tICcuL2R1dHlDaGFpbic7XG5pbXBvcnQgeyBwYWdpbmdMb2dpYyB9IGZyb20gJy4vdXRpbHMnO1xuXG5jbGFzcyBQYWdlU3BsaWNpbmcge1xuICBwcml2YXRlIGR1dHlDaGFpbnM6IER1dHlDaGFpbltdID0gW107XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuZHV0eUNoYWlucyA9IFtdO1xuICB9XG4gIHB1YmxpYyBnZXQgY2hhaW4oKSB7XG4gICAgcmV0dXJuIHRoaXMuZHV0eUNoYWlucztcbiAgfVxuXG4gIHByaXZhdGUgZ2V0IGhlYWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuZHV0eUNoYWluc1swXTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0IHRhaWwoKSB7XG4gICAgcmV0dXJuIHRoaXMuZHV0eUNoYWlucy5zbGljZSgtMSlbMF1cbiAgfVxuXG4gIHB1YmxpYyBnZXQgdXRpbHMoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHBhZ2luZ0xvZ2ljOiAoZ2V0RGF0YSwgZ2V0Q291bnQpID0+IHtcbiAgICAgICAgcmV0dXJuIGFzeW5jIChvZmZzZXQsIHBhZ2VTaXplLCBuZXh0KSA9PiB7XG4gICAgICAgICAgcmV0dXJuIGF3YWl0IHBhZ2luZ0xvZ2ljKGdldERhdGEsIGdldENvdW50LCBvZmZzZXQsIHBhZ2VTaXplLCBuZXh0KVxuICAgICAgICB9XG4gICAgICB9LFxuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyBlbXB0eUNoYWluKCkge1xuICAgIHRoaXMuZHV0eUNoYWlucyA9IFtdXG4gIH1cblxuICBwdWJsaWMgbmV4dChoYW5kbGVyOiBGdW5jdGlvbikge1xuICAgIGNvbnN0IG5leHRDaGFpbiA9IG5ldyBEdXR5Q2hhaW4oaGFuZGxlcik7XG5cbiAgICBpZiAodGhpcy5oZWFkKSB7XG4gICAgICB0aGlzLmhlYWQuc2V0TmV4dChuZXh0Q2hhaW4pO1xuICAgIH1cbiAgICB0aGlzLmR1dHlDaGFpbnMudW5zaGlmdChuZXh0Q2hhaW4pO1xuXG4gICAgcmV0dXJuIHRoaXM7XG4gIH1cblxuICBwdWJsaWMgYXN5bmMgc3RhcnQocGFnZUluZGV4LCBwYWdlU2l6ZSkge1xuICAgIGlmICghdGhpcy50YWlsKSB0aHJvdyBuZXcgRXJyb3IoJ2R1dHkgY2hhaW4gaXMgZW1wdHkhJyk7XG4gICAgY29uc3QgcmV0ID0gYXdhaXQgdGhpcy50YWlsLmhhbmRsZVJlcXVlc3QocGFnZUluZGV4LCBwYWdlU2l6ZSk7XG5cbiAgICByZXR1cm4gcmV0XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgUGFnZVNwbGljaW5nO1xuIl19